# This workflow is intended to be used as a reusable workflow via 'workflow_call'.
# It does not have a direct trigger and will show a warning in the GitHub UI.
# This is expected and does not affect functionality.

name: Build and Push Docker

workflow_call:
  inputs:
    version:
      description: "The primary version tag for the image (e.g., 1.2.3, 1.2.3-beta.1)"
      required: true
      type: string
    additional_tags:
      description: "Comma-separated list of additional tags (e.g., latest, major.minor)"
      required: false
      type: string
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  TITLE: "SnapDog2 - Smart Home Audio System"
  DESCRIPTION: "Snapcast-based Smart Home Audio System with MQTT & KNX integration"

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read # To checkout code
      packages: write # To push to GitHub Container Registry

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Full history for GitVersion

      - name: Setup .NET (for GitVersion tool)
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "9.0.301" # Ensure this can run GitVersion CLI

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.10.2
        with:
          versionSpec: "6.x"

      - name: Determine version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.10.2
        with:
          useConfigFile: true
          # No need to update assembly info for this Docker-only build

      - name: Display GitVersion outputs for develop build
        run: |
          echo "Branch: ${{ github.ref_name }}"
          echo "SemVer: ${{ steps.gitversion.outputs.semVer }}"
          echo "FullSemVer: ${{ steps.gitversion.outputs.fullSemVer }}"
          echo "NuGetVersion: ${{ steps.gitversion.outputs.nuGetVersion }}"
          echo "InformationalVersion: ${{ steps.gitversion.outputs.informationalVersion }}"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64,linux/arm64

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            # Tag with GitVersion calculated version for develop branch
            type=raw,value=${{ steps.gitversion.outputs.semVer }}
            # Tag with 'edge' for develop branch
            type=raw,value=edge
          labels: |
            org.opencontainers.image.title=${{ env.TITLE }}
            org.opencontainers.image.description=${{ env.DESCRIPTION }}
            org.opencontainers.image.vendor=${{ github.repository_owner }}
            org.opencontainers.image.version=${{ steps.gitversion.outputs.semVer }}
            org.label-schema.version=${{ steps.gitversion.outputs.semVer }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ steps.meta.outputs.tags }}
            ${{ inputs.additional_tags && inputs.additional_tags || '' }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false # Avoid issues with multi-platform builds
          build-args: |
            APP_VERSION=${{ steps.gitversion.outputs.semVer }}

      - name: Generate build summary
        run: |
          echo "## 🐳 Docker Build Summary - Develop Branch" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Built Platforms:** linux/amd64, linux/arm64" >> $GITHUB_STEP_SUMMARY
          echo "**GitVersion:** ${{ steps.gitversion.outputs.semVer }}" >> $GITHUB_STEP_SUMMARY
          echo "**Full Version:** ${{ steps.gitversion.outputs.fullSemVer }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Tags Created:**" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo '${{ steps.meta.outputs.tags }}' >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**✅ Images pushed to GitHub Container Registry**" >> $GITHUB_STEP_SUMMARY
