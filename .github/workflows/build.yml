name: Build and Test

# This workflow is configured to run only for regular branch pushes and PRs,
# but NOT for tag pushes which are handled by the tag-release.yml workflow.
# We also skip this workflow when a version tag was pushed along with commits.

on:
  # Run on branch pushes
  push:
    branches: [main, develop]
    paths-ignore:
      - "**/*.md"
      - "docs/**"
  # Handle pull requests separately
  pull_request:
    branches: [main, develop]
    paths-ignore:
      - "**/*.md"
      - "docs/**"

jobs:
  check-for-tag:
    runs-on: ubuntu-latest
    outputs:
      has-tag: ${{ steps.check-tag.outputs.has-tag }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check if push includes a version tag
        id: check-tag
        run: |
          # Get the tag for the current commit, if any
          TAG=$(git tag --points-at HEAD | grep -E "^v[0-9]" || echo "")

          # Output whether we have a version tag
          if [ -n "$TAG" ]; then
            echo "has-tag=true" >> $GITHUB_OUTPUT
            echo "Found version tag: $TAG"
          else
            echo "has-tag=false" >> $GITHUB_OUTPUT
            echo "No version tag found for the current commit"
          fi

  build:
    needs: check-for-tag
    # Skip build if tag-release workflow will handle this commit
    if: needs.check-for-tag.outputs.has-tag != 'true'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Full history for GitVersion
          ref: ${{ github.head_ref || github.ref_name }}

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "9.0.x"

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.10.2
        with:
          versionSpec: "6.x"

      - name: Determine version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.10.2
        with:
          useConfigFile: true
          updateAssemblyInfo: true

      - name: Display GitVersion outputs
        run: |
          echo "SemVer: ${{ steps.gitversion.outputs.semVer }}"
          echo "NuGetVersion: ${{ steps.gitversion.outputs.nuGetVersion }}"
          echo "FullSemVer: ${{ steps.gitversion.outputs.fullSemVer }}"
          echo "Updated project files with version info"

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Run code style checks
        run: dotnet build /p:TreatWarningsAsErrors=true

      - name: Pack NuGet package
        run: dotnet pack --configuration Release --no-build -o ./artifacts

      - name: Upload NuGet Package
        uses: actions/upload-artifact@v4
        with:
          name: nuget-package
          path: ./artifacts/*.nupkg
          retention-days: 7
