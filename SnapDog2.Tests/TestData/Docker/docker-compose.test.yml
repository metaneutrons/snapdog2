# ═══════════════════════════════════════════════════════════════════════════════
# SnapDog2 Integration Test Environment - Self-Contained
# ═══════════════════════════════════════════════════════════════════════════════
# Fully self-contained test environment with dedicated test-optimized containers
# No external dependencies on devcontainer infrastructure
# ═══════════════════════════════════════════════════════════════════════════════

name: snapdog-test
services:
  # SnapDog2 application for testing - dedicated test container
  app:
    build:
      context: ../../.. # Go back to solution root (snapdog directory)
      dockerfile: SnapDog2.Tests/TestData/Docker/containers/app/Dockerfile.test
    volumes:
      - snapcast_sinks:/snapsinks # Shared audio sinks
    environment:
      - DOTNET_ENVIRONMENT=Test
      - ASPNETCORE_ENVIRONMENT=Test
      # Snapcast connection settings
      - SNAPDOG_SERVICES_SNAPCAST_ADDRESS=snapcast-server
      - SNAPDOG_SERVICES_SNAPCAST_JSONRPC_PORT=1704
      - SNAPDOG_SERVICES_SNAPCAST_HTTP_PORT=1780
      # MQTT connection settings
      - SNAPDOG_SERVICES_MQTT_BROKER_ADDRESS=mqtt
      - SNAPDOG_SERVICES_MQTT_PORT=1883
      - SNAPDOG_SERVICES_MQTT_USERNAME=snapdog
      - SNAPDOG_SERVICES_MQTT_PASSWORD=snapdog
      # KNX connection settings
      - SNAPDOG_SERVICES_KNX_ENABLED=true
      - SNAPDOG_SERVICES_KNX_CONNECTION_TYPE=tunnel
      - SNAPDOG_SERVICES_KNX_GATEWAY=knxd
      - SNAPDOG_SERVICES_KNX_PORT=3671
      - SNAPDOG_SERVICES_KNX_TIMEOUT=10
      - SNAPDOG_SERVICES_KNX_AUTO_RECONNECT=true
      # Test-specific settings
      - SNAPDOG_SYSTEM_LOG_LEVEL=Information
      - SNAPDOG_SYSTEM_HEALTH_CHECKS_ENABLED=true
      # Zone configuration
      - SNAPDOG_ZONE_1_NAME=Test Zone 1
      - SNAPDOG_ZONE_1_SINK=/snapsinks/zone1
      - SNAPDOG_ZONE_2_NAME=Test Zone 2
      - SNAPDOG_ZONE_2_SINK=/snapsinks/zone2
      # Client configuration
      - SNAPDOG_CLIENT_1_DEFAULT_ZONE=1
      - SNAPDOG_CLIENT_1_MAC=02:42:ac:14:00:10
      - SNAPDOG_CLIENT_1_NAME=Test Living Room
      - SNAPDOG_CLIENT_2_DEFAULT_ZONE=1
      - SNAPDOG_CLIENT_2_MAC=02:42:ac:14:00:11
      - SNAPDOG_CLIENT_2_NAME=Test Kitchen
      - SNAPDOG_CLIENT_3_DEFAULT_ZONE=2
      - SNAPDOG_CLIENT_3_MAC=02:42:ac:14:00:12
      - SNAPDOG_CLIENT_3_NAME=Test Bedroom
    depends_on:
      snapcast-server:
        condition: service_healthy
      mqtt:
        condition: service_healthy
      knxd:
        condition: service_healthy
    networks:
      container:
        ipv4_address: 172.24.0.2
    ports:
      - "5001:5000" # HTTP port for test access
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

  # MQTT Broker - dedicated test container
  mqtt:
    build:
      context: containers/mqtt
      dockerfile: Dockerfile
    volumes:
      - ./configs/mosquitto.test.conf:/mosquitto/config/mosquitto.conf:ro
    networks:
      container:
        ipv4_address: 172.24.0.3
    ports:
      - "1883:1883" # MQTT port for test access
    healthcheck:
      test:
        [
          "CMD",
          "mosquitto_pub",
          "-h",
          "localhost",
          "-p",
          "1883",
          "-u",
          "snapdog",
          "-P",
          "snapdog",
          "-t",
          "health",
          "-m",
          "check",
        ]
      interval: 5s
      timeout: 3s
      retries: 3
      start_period: 10s

  # Snapcast Server - dedicated test container
  snapcast-server:
    build:
      context: containers/snapcast-server
      dockerfile: Dockerfile
    volumes:
      - ./configs/snapserver.test.conf:/etc/snapserver.conf:ro
      - snapcast_sinks:/tmp/snapfifo
    networks:
      container:
        ipv4_address: 172.24.0.5
    ports:
      - "1704:1704" # JSON-RPC port
      - "1705:1705" # TCP port
      - "1780:1780" # HTTP port
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:1780"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 15s

  # Snapcast Client - Living Room (Test)
  snapcast-client-living:
    build:
      context: containers/snapcast-client
      dockerfile: Dockerfile
    command:
      ["snapclient", "--host", "snapcast-server", "--port", "1704", "--hostID", "02:42:ac:14:00:10", "--player", "null"]
    depends_on:
      snapcast-server:
        condition: service_healthy
    networks:
      container:
        ipv4_address: 172.24.0.6
        mac_address: 02:42:ac:14:00:10
    healthcheck:
      test: ["CMD", "pgrep", "snapclient"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 15s

  # Snapcast Client - Kitchen (Test)
  snapcast-client-kitchen:
    build:
      context: containers/snapcast-client
      dockerfile: Dockerfile
    command:
      ["snapclient", "--host", "snapcast-server", "--port", "1704", "--hostID", "02:42:ac:14:00:11", "--player", "null"]
    depends_on:
      snapcast-server:
        condition: service_healthy
    networks:
      container:
        ipv4_address: 172.24.0.7
        mac_address: 02:42:ac:14:00:11
    healthcheck:
      test: ["CMD", "pgrep", "snapclient"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 15s

  # Snapcast Client - Bedroom (Test)
  snapcast-client-bedroom:
    build:
      context: containers/snapcast-client
      dockerfile: Dockerfile
    command:
      ["snapclient", "--host", "snapcast-server", "--port", "1704", "--hostID", "02:42:ac:14:00:12", "--player", "null"]
    depends_on:
      snapcast-server:
        condition: service_healthy
    networks:
      container:
        ipv4_address: 172.24.0.8
        mac_address: 02:42:ac:14:00:12
    healthcheck:
      test: ["CMD", "pgrep", "snapclient"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 15s

  # KNX Daemon - dedicated test container
  knxd:
    build:
      context: containers/knxd
      dockerfile: Dockerfile
    volumes:
      - ./configs/knxd.test.conf:/etc/knxd.conf:ro
    networks:
      container:
        ipv4_address: 172.24.0.10
    ports:
      - "3671:3671" # KNX tunnel port
      - "6720:6720" # KNX web interface port
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "3671"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 15s

# Test network - isolated from development
networks:
  container:
    driver: bridge
    ipam:
      config:
        - subnet: 172.24.0.0/16

# Shared volumes for test environment
volumes:
  snapcast_sinks:
    driver: local
