# ═══════════════════════════════════════════════════════════════════════════════
# SnapDog2 Test Application Container - SIMPLIFIED FOR TESTING
# ═══════════════════════════════════════════════════════════════════════════════
# This is a minimal container that just provides a running service for integration tests
# It doesn't need to be production-ready, just functional enough for tests
# ═══════════════════════════════════════════════════════════════════════════════

FROM mcr.microsoft.com/dotnet/aspnet:9.0 AS base
WORKDIR /app
EXPOSE 5000

# Create a minimal test application that just responds to health checks
RUN echo '#!/bin/bash\necho "SnapDog2 Test Container Started"\necho "Listening on port 5000..."\n# Simple HTTP server for health checks\nwhile true; do\n  echo -e "HTTP/1.1 200 OK\\r\\nContent-Length: 2\\r\\n\\r\\nOK" | nc -l -p 5000 -q 1\ndone' > /app/start.sh && \
    chmod +x /app/start.sh

# Install netcat for the simple HTTP server
RUN apt-get update && apt-get install -y netcat-openbsd && rm -rf /var/lib/apt/lists/*

# Test-specific environment variables
ENV DOTNET_ENVIRONMENT=Test
ENV ASPNETCORE_ENVIRONMENT=Test

# Health check for test reliability
HEALTHCHECK --interval=10s --timeout=5s --start-period=10s --retries=3 \
    CMD curl -f http://localhost:5000 || nc -z localhost 5000 || exit 1

# Start the simple test server
CMD ["/app/start.sh"]
