networks:
  snapcast-test:
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.0.0/16

volumes:
  snapcast-data:
    driver: local
  snapcast-logs:
    driver: local
  audio-sinks:
    driver: local
  grafana-data:
    driver: local
  prometheus-data:
    driver: local

services:
  # =============================================================================
  # üéµ Main Snapcast Server - The Award Winner!
  # =============================================================================
  snapcast-server:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SNAPCAST_VERSION: "0.28.0"
        SHAIRPORT_SYNC_VERSION: "4.3.2"
    container_name: snapcast-server-test
    hostname: snapcast-server
    networks:
      snapcast-test:
        ipv4_address: 172.25.0.10
    ports:
      # Core Snapcast ports
      - "1704:1704/tcp" # Audio streaming
      - "1705:1705/tcp" # TCP JSON-RPC (The critical feature!)
      - "1780:1780/tcp" # HTTP JSON-RPC Web UI
      # AirPlay ports
      - "5000:5000/tcp" # AirPlay service
      - "6001-6011:6001-6011/udp" # AirPlay data channels
    volumes:
      - snapcast-data:/var/lib/snapcast
      - snapcast-logs:/var/log/snapcast
      - audio-sinks:/snapsinks
    environment:
      - SNAPCAST_LOG_LEVEL=info
      - AIRPLAY_NAME=SnapDog2 Test AirPlay
      - AIRPLAY_PORT=5000
    restart: unless-stopped
    healthcheck:
      test: ["/usr/local/bin/health-check.sh"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.snapcast.rule=Host(`snapcast.localhost`)"
      - "traefik.http.services.snapcast.loadbalancer.server.port=1780"

  # =============================================================================
  # üìª Test Snapcast Clients
  # =============================================================================
  snapcast-client-living:
    image: saiyato/snapclient:latest
    container_name: snapcast-client-living
    hostname: living-room
    networks:
      snapcast-test:
        ipv4_address: 172.25.0.11
    environment:
      - SNAPCAST_SERVER_HOST=172.25.0.10
      - SNAPCAST_SERVER_PORT=1704
      - SNAPCAST_CLIENT_NAME=Living Room
      - SNAPCAST_CLIENT_MAC=02:42:ac:19:00:11
    volumes:
      - /dev/snd:/dev/snd
    devices:
      - /dev/snd
    restart: unless-stopped
    depends_on:
      snapcast-server:
        condition: service_healthy

  snapcast-client-kitchen:
    image: saiyato/snapclient:latest
    container_name: snapcast-client-kitchen
    hostname: kitchen
    networks:
      snapcast-test:
        ipv4_address: 172.25.0.12
    environment:
      - SNAPCAST_SERVER_HOST=172.25.0.10
      - SNAPCAST_SERVER_PORT=1704
      - SNAPCAST_CLIENT_NAME=Kitchen
      - SNAPCAST_CLIENT_MAC=02:42:ac:19:00:12
    volumes:
      - /dev/snd:/dev/snd
    devices:
      - /dev/snd
    restart: unless-stopped
    depends_on:
      snapcast-server:
        condition: service_healthy

  # =============================================================================
  # üé∂ Audio Source Simulator
  # =============================================================================
  audio-simulator:
    image: alpine:3.19
    container_name: audio-simulator
    hostname: audio-sim
    networks:
      snapcast-test:
        ipv4_address: 172.25.0.20
    volumes:
      - audio-sinks:/snapsinks
    command: >
      sh -c "
        apk add --no-cache ffmpeg curl &&
        echo 'üéµ Audio Simulator Ready!' &&
        while true; do
          echo 'üéµ Generating test tone...' &&
          ffmpeg -f lavfi -i 'sine=frequency=440:duration=10' -f wav - 2>/dev/null > /snapsinks/default &&
          sleep 15
        done
      "
    restart: unless-stopped
    depends_on:
      snapcast-server:
        condition: service_healthy

  # =============================================================================
  # üìä Monitoring Stack
  # =============================================================================
  prometheus:
    image: prom/prometheus:latest
    container_name: snapcast-prometheus
    hostname: prometheus
    networks:
      snapcast-test:
        ipv4_address: 172.25.0.30
    ports:
      - "9090:9090"
    volumes:
      - prometheus-data:/prometheus
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--storage.tsdb.retention.time=200h"
      - "--web.enable-lifecycle"
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: snapcast-grafana
    hostname: grafana
    networks:
      snapcast-test:
        ipv4_address: 172.25.0.31
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=snapcast-test
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    restart: unless-stopped
    depends_on:
      - prometheus

  # =============================================================================
  # üîç Network Debugging Tools
  # =============================================================================
  network-tools:
    image: nicolaka/netshoot:latest
    container_name: snapcast-nettools
    hostname: nettools
    networks:
      snapcast-test:
        ipv4_address: 172.25.0.40
    command: sleep infinity
    restart: unless-stopped
    profiles:
      - debug

  # =============================================================================
  # üåê Reverse Proxy (Optional)
  # =============================================================================
  traefik:
    image: traefik:v3.0
    container_name: snapcast-traefik
    hostname: traefik
    networks:
      snapcast-test:
        ipv4_address: 172.25.0.50
    ports:
      - "80:80"
      - "8080:8080" # Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command:
      - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
    restart: unless-stopped
    profiles:
      - proxy
