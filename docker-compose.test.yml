# ═══════════════════════════════════════════════════════════════════════════════
# SnapDog2 Integration Test Environment
# ═══════════════════════════════════════════════════════════════════════════════
# Based on proven devcontainer pattern - single coordinated environment
# All services use same network and configuration as development environment
# ═══════════════════════════════════════════════════════════════════════════════

services:
  # SnapDog2 application for testing - same as dev but with test overrides
  app-test:
    build:
      context: .
      dockerfile: ./Dockerfile
      target: development
    volumes:
      - .:/app:cached
      - snapcast_sinks_test:/snapsinks # Shared audio sinks
    environment:
      - DOTNET_ENVIRONMENT=Test
      - ASPNETCORE_ENVIRONMENT=Test
      # Override Snapcast connection to use test server
      - SNAPDOG_SERVICES_SNAPCAST_ADDRESS=snapcast-server-test
      - SNAPDOG_SERVICES_SNAPCAST_JSONRPC_PORT=1705
      - SNAPDOG_SERVICES_SNAPCAST_HTTP_PORT=1780
      # Override MQTT to use test broker
      - SNAPDOG_SERVICES_MQTT_BROKER_ADDRESS=mqtt-test
      - SNAPDOG_SERVICES_MQTT_PORT=1883
      - SNAPDOG_SERVICES_MQTT_USERNAME=snapdog
      - SNAPDOG_SERVICES_MQTT_PASSWORD=snapdog
      # Enable KNX for testing with test daemon
      - SNAPDOG_SERVICES_KNX_ENABLED=true
      - SNAPDOG_SERVICES_KNX_CONNECTION_TYPE=tunnel
      - SNAPDOG_SERVICES_KNX_GATEWAY=knxd-test
      - SNAPDOG_SERVICES_KNX_PORT=3671
      - SNAPDOG_SERVICES_KNX_TIMEOUT=10
      - SNAPDOG_SERVICES_KNX_AUTO_RECONNECT=true
      # Test-specific settings
      - SNAPDOG_SYSTEM_LOG_LEVEL=Information
      - SNAPDOG_SYSTEM_HEALTH_CHECKS_ENABLED=true
      # Zone configuration (same as dev)
      - SNAPDOG_ZONE_1_NAME=Ground Floor
      - SNAPDOG_ZONE_1_SINK=/snapsinks/zone1
      - SNAPDOG_ZONE_2_NAME=1st Floor
      - SNAPDOG_ZONE_2_SINK=/snapsinks/zone2
      # Client configuration (same as dev)
      - SNAPDOG_CLIENT_1_DEFAULT_ZONE=1
      - SNAPDOG_CLIENT_1_MAC=02:42:ac:11:00:10
      - SNAPDOG_CLIENT_1_NAME=Living Room
      - SNAPDOG_CLIENT_2_DEFAULT_ZONE=1
      - SNAPDOG_CLIENT_2_MAC=02:42:ac:11:00:11
      - SNAPDOG_CLIENT_2_NAME=Kitchen
      - SNAPDOG_CLIENT_3_DEFAULT_ZONE=2
      - SNAPDOG_CLIENT_3_MAC=02:42:ac:11:00:12
      - SNAPDOG_CLIENT_3_NAME=Bedroom
    depends_on:
      snapcast-server-test:
        condition: service_healthy
      mqtt-test:
        condition: service_started
      knxd-test:
        condition: service_healthy
    networks:
      snapdog-test:
        ipv4_address: 172.30.0.2
    ports:
      - "5001:5000" # API port for test access
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

  # Snapcast Server - same config as dev but for testing
  snapcast-server-test:
    build:
      context: ./devcontainer/snapcast-server
    hostname: snapcast-server-test
    volumes:
      - snapcast_sinks_test:/snapsinks
    environment:
      # Zone configuration (same as SnapDog2 app)
      - SNAPDOG_ZONE_1_NAME=Ground Floor
      - SNAPDOG_ZONE_1_SINK=/snapsinks/zone1
      - SNAPDOG_ZONE_2_NAME=1st Floor
      - SNAPDOG_ZONE_2_SINK=/snapsinks/zone2
      # Snapcast server configuration
      - SNAPCAST_JSONRPC_PORT=1705
      - SNAPCAST_WEBSERVER_PORT=1780
      - SNAPCAST_WEBSOCKET_PORT=1704
    networks:
      snapdog-test:
        ipv4_address: 172.30.0.5
    ports:
      - "1705:1705" # JSON-RPC port for test access
      - "1780:1780" # Web server port for test access
      - "1704:1704" # WebSocket port for test access
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "1705"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 10s

  # KNX Gateway Simulator for testing - same as dev but with test suffix
  knxd-test:
    build:
      context: ./devcontainer/knxd
      dockerfile: Dockerfile
    hostname: knxd-test
    environment:
      - ADDRESS=0.0.1 # KNX daemon address (standard format)
      - CLIENT_ADDRESS=0.0.2:8 # Client address range (start:count)
      - INTERFACE=dummy # Use dummy interface for simulation
      - DEBUG_LEVEL=verbose # Debug level (verbose for troubleshooting)
      - FILTERS=single,pace:queue # Filters with queue to avoid warnings
    networks:
      snapdog-test:
        ipv4_address: 172.30.0.10
    ports:
      - "3671:3671/udp" # KNX/IP port for test access
    healthcheck:
      test: ["CMD", "netstat", "-ln", "|", "grep", ":3671"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 10s

  # Snapcast Clients - same as dev but for testing
  snapcast-client-living-room-test:
    build:
      context: ./devcontainer/snapcast-client
    depends_on:
      snapcast-server-test:
        condition: service_healthy
    environment:
      - SNAPSERVER_HOST=172.30.0.5
      - CLIENT_ID=living-room
      - CLIENT_NAME=Living Room
      - FIXED_MAC_ADDRESS=02:42:ac:11:00:10
    networks:
      snapdog-test:
        ipv4_address: 172.30.0.6
        mac_address: 02:42:ac:11:00:10

  snapcast-client-kitchen-test:
    build:
      context: ./devcontainer/snapcast-client
    depends_on:
      snapcast-server-test:
        condition: service_healthy
    environment:
      - SNAPSERVER_HOST=172.30.0.5
      - CLIENT_ID=kitchen
      - CLIENT_NAME=Kitchen
      - FIXED_MAC_ADDRESS=02:42:ac:11:00:11
    networks:
      snapdog-test:
        ipv4_address: 172.30.0.7
        mac_address: 02:42:ac:11:00:11

  snapcast-client-bedroom-test:
    build:
      context: ./devcontainer/snapcast-client
    depends_on:
      snapcast-server-test:
        condition: service_healthy
    environment:
      - SNAPSERVER_HOST=172.30.0.5
      - CLIENT_ID=bedroom
      - CLIENT_NAME=Bedroom
      - FIXED_MAC_ADDRESS=02:42:ac:11:00:12
    networks:
      snapdog-test:
        ipv4_address: 172.30.0.8
        mac_address: 02:42:ac:11:00:12

  # MQTT Broker for testing
  mqtt-test:
    image: eclipse-mosquitto:2.0
    volumes:
      - ./devcontainer/mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - ./devcontainer/mosquitto/passwd:/mosquitto/config/passwd
      - mqtt_data_test:/mosquitto/data
      - mqtt_logs_test:/mosquitto/log
    environment:
      - MOSQUITTO_LOG_LEVEL=debug
    networks:
      snapdog-test:
        ipv4_address: 172.30.0.3
    ports:
      - "1883:1883" # MQTT port for test access

volumes:
  snapcast_sinks_test: # Shared volume for audio sinks
  mqtt_data_test: # MQTT persistence data
  mqtt_logs_test: # MQTT logs

networks:
  snapdog-test:
    driver: bridge
    ipam:
      config:
        - subnet: 172.30.0.0/16
