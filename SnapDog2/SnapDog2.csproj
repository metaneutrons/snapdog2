<Project Sdk="Microsoft.NET.Sdk.Web">
  <PropertyGroup>
    <TargetFramework>net9.0</TargetFramework>
    <Nullable>enable</Nullable>
    <ImplicitUsings>enable</ImplicitUsings>
    <GitVersionTaskEnabled Condition="'$(CI)' == 'true'">true</GitVersionTaskEnabled>
    <EnableDefaultContentItems>false</EnableDefaultContentItems>
    <GenerateStaticWebAssetsManifest>false</GenerateStaticWebAssetsManifest>
  </PropertyGroup>
  <ItemGroup>
    <!-- Static web assets -->
    <Content Include="wwwroot\**" CopyToOutputDirectory="PreserveNewest" />
  </ItemGroup>

  <ItemGroup>

    <PackageReference Include="dotenv.net" />
    <PackageReference Include="Microsoft.AspNetCore.OpenApi" />
    <PackageReference Include="Microsoft.Extensions.DependencyInjection" />
    <PackageReference Include="MQTTnet" />
    <PackageReference Include="SnapcastClient" />
    <PackageReference Include="StackExchange.Redis" />
    <PackageReference Include="Swashbuckle.AspNetCore" />
    <PackageReference Include="EnvoyConfig" />
    <PackageReference Include="SignalRSwaggerGen" />
    <PackageReference Include="Serilog.AspNetCore" />
    <PackageReference Include="Serilog.Sinks.Console" />
    <PackageReference Include="Serilog.Sinks.File" />
    <PackageReference Include="Microsoft.Extensions.Diagnostics.HealthChecks" />
    <PackageReference Include="AspNetCore.HealthChecks.Network" />
    <PackageReference Include="FluentValidation" />
    <PackageReference Include="FluentValidation.DependencyInjectionExtensions" />
    <PackageReference Include="FluentValidation.AspNetCore" />
    <PackageReference Include="Knx.Falcon.Sdk" />
    <PackageReference Include="Polly" />
    <PackageReference Include="Microsoft.Extensions.Http.Polly" />
    <PackageReference Include="GitVersion.MsBuild" PrivateAssets="All">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Swashbuckle.AspNetCore.Annotations" />
    <PackageReference Include="System.CommandLine" />
    <PackageReference Include="SubsonicMedia" />
    <PackageReference Include="LibVLCSharp" />
    <PackageReference Include="Makaretu.Dns.Multicast" />
    <!-- OpenTelemetry packages for observability -->
    <PackageReference Include="OpenTelemetry" />
    <PackageReference Include="OpenTelemetry.Extensions.Hosting" />
    <PackageReference Include="OpenTelemetry.Instrumentation.AspNetCore" />
    <PackageReference Include="OpenTelemetry.Instrumentation.Http" />
    <PackageReference Include="OpenTelemetry.Exporter.OpenTelemetryProtocol" />
  </ItemGroup>

  <!-- Auto-generate swagger.json when API changes -->
  <Target Name="GenerateSwaggerJson" AfterTargets="Build" Condition="'$(Configuration)' == 'Debug'">
    <Message Text="ğŸ”„ Generating OpenAPI specifications..." Importance="high" />
    <Exec Command="dotnet run --project $(MSBuildProjectDirectory)/../SnapDog2.SwaggerGen/SnapDog2.SwaggerGen.csproj -- $(MSBuildProjectDirectory)/swagger.json" ContinueOnError="false" WorkingDirectory="$(MSBuildProjectDirectory)" />
    <Message Text="âœ… OpenAPI specifications generated successfully" Importance="high" />
  </Target>

</Project>
