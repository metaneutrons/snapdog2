KNX Falcon SDK

<table class="titleTable">
<colgroup>
<col style="width: 50%" />
<col style="width: 50%" />
</colgroup>
<tbody>
<tr>
<td class="logoColumn"><img src="../icons/Help.png" /></td>
<td class="titleColumn">KnxBus<span id="LSTC95C0415_0"></span>
OpenConnectionAsync Method</td>
</tr>
</tbody>
</table>

<span class="introStyle"></span>

Opens a connection-oriented connection to a KNX device

**Namespace:**
 [Knx.Falcon.Sdk](ddc84507-eccd-b692-8467-e3956feec382.htm)  
**Assembly:**  Knx.Falcon.Sdk (in Knx.Falcon.Sdk.dll) Version: 6.3.0
\[2024-12-07|33a4f8ce8366fff4f9e3f5340a78dd8664732dba|origin/releases/6.3-profiterole\]

<span class="collapsibleRegionTitle"
onclick="SectionExpandCollapse('ID1RB')"
onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)"
tabindex="0"><img src="../icons/SectionExpanded.png" id="ID1RBToggle"
class="collapseToggle" />Syntax</span>

<a href="#"
onclick="javascript:ChangeTab(&#39;ID0EDCA&#39;,&#39;cs&#39;,&#39;1&#39;,&#39;4&#39;);return false;">C#</a>

<a href="#"
onclick="javascript:ChangeTab(&#39;ID0EDCA&#39;,&#39;vb&#39;,&#39;2&#39;,&#39;4&#39;);return false;">VB</a>

<a href="#"
onclick="javascript:ChangeTab(&#39;ID0EDCA&#39;,&#39;cpp&#39;,&#39;3&#39;,&#39;4&#39;);return false;">C++</a>

<a href="#"
onclick="javascript:ChangeTab(&#39;ID0EDCA&#39;,&#39;fs&#39;,&#39;4&#39;,&#39;4&#39;);return false;">F#</a>

<a href="#" id="ID0EDCA_copyCode" class="copyCodeSnippet"
onclick="javascript:CopyToClipboard(&#39;ID0EDCA&#39;);return false;"
title="Copy">Copy</a>

    public Task<KnxDevice> OpenConnectionAsync(
        IndividualAddress individualAddress,
        DeterminePathApduLength getPathRestriction = null,
        CancellationToken cancellationToken = default
    )

    Public Function OpenConnectionAsync ( 
        individualAddress As IndividualAddress,
        Optional getPathRestriction As DeterminePathApduLength = Nothing,
        Optional cancellationToken As CancellationToken = Nothing
    ) As Task(Of KnxDevice)

    public:
    Task<KnxDevice^>^ OpenConnectionAsync(
        IndividualAddress individualAddress, 
        DeterminePathApduLength^ getPathRestriction = nullptr, 
        CancellationToken cancellationToken = CancellationToken()
    )

    member OpenConnectionAsync : 
            individualAddress : IndividualAddress * 
            ?getPathRestriction : DeterminePathApduLength * 
            ?cancellationToken : CancellationToken 
    (* Defaults:
            let _getPathRestriction = defaultArg getPathRestriction null
            let _cancellationToken = defaultArg cancellationToken new CancellationToken()
    *)
    -> Task<KnxDevice> 

#### Parameters

<span class="parameter">individualAddress</span>  
Type: [Knx.Falcon<span id="LSTC95C0415_1"></span>](96a1c930-0f99-d67e-b5de-24b4e417e173.htm)

IndividualAddress  
The individual address of the target device

<span class="parameter">getPathRestriction</span> (Optional)  
Type: [Knx.Falcon<span id="LSTC95C0415_2"></span>](f4e3d603-5673-9839-7207-f6be421bd8ed.htm)

DeterminePathApduLength  
Optional client-provided function to help determine the maximum APDU
length along the communication path (see remarks); may be
<span class="keyword"><span id="LSTC95C0415_3"></span></span>

.

<span class="parameter">cancellationToken</span> (Optional)  
Type: <span class="nolink">System.Threading<span id="LSTC95C0415_4"></span></span>

CancellationToken  
Can be used to cancel the operation

#### Return Value

Type: <span class="nolink">Task</span><span id="LSTC95C0415_5"></span>

[KnxDevice](a8ee86c3-a3f4-2ace-fc78-4d70c73eb95d.htm)<span id="LSTC95C0415_6"></span>

  
The [KnxDevice](a8ee86c3-a3f4-2ace-fc78-4d70c73eb95d.htm) object that
can be used to perform the various device management procedures. When no
longer needed, use the
[DisposeAsync<span id="LSTC95C0415_7"></span>](9111d682-5111-f726-6b21-fbc6dac6bb0b.htm)

method to free resources held by the object.

<span class="collapsibleRegionTitle"
onclick="SectionExpandCollapse('ID2RB')"
onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)"
tabindex="0"><img src="../icons/SectionExpanded.png" id="ID2RBToggle"
class="collapseToggle" />Exceptions</span>

<table>
<thead>
<tr>
<th>Exception</th>
<th>Condition</th>
</tr>
</thead>
<tbody>
<tr>
<td><a
href="0d8698ab-41c7-6fb8-43c0-e1f34ac739ff.htm">CommunicationException</a></td>
<td>If the connection could not be established.</td>
</tr>
</tbody>
</table>

<span class="collapsibleRegionTitle"
onclick="SectionExpandCollapse('ID3RB')"
onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)"
tabindex="0"><img src="../icons/SectionExpanded.png" id="ID3RBToggle"
class="collapseToggle" />Remarks</span>

[ApduLengthRestriction](8604654d-f177-8822-d311-b70f6920e039.htm) is by
default determined as minimum of the following:

- the max APDU length of the interface
- the max APDU length of the target device
- if <span class="parameter">getPathRestriction</span> is not
  <span class="keyword"><span id="LSTC95C0415_8"></span></span>
  , the value returned by this method. If it is
  <span class="keyword"><span id="LSTC95C0415_9"></span></span>
  , max APDU length is restricted to 15.
- the value of
  [LimitApduLength](0e4edcda-a791-0edd-66c1-84102fe305dc.htm) if not 0

getPathRestriction is expected to use information about the project
topology to query any couplers/routers between the interface and the
target device about their maximum APDU length for routing. There are
three predefined strategies that can be used out of the box:
[OptimisticPathRestriction](c41ce03d-d1c1-5d23-2688-5a341bb63ac9.htm),
[PessimisticPathRestriction](e09a1c81-da07-bc90-e816-131bffed70be.htm),
and
[QueryRoutersPathRestriction(<span id="LSTC95C0415_10"></span>](724df41f-02d3-7b6c-0aa5-cf5c7f5d05d0.htm)

IndividualAddress<span id="LSTC95C0415_11"></span>

).

<span class="collapsibleRegionTitle"
onclick="SectionExpandCollapse('ID4RB')"
onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)"
tabindex="0"><img src="../icons/SectionExpanded.png" id="ID4RBToggle"
class="collapseToggle" />Examples</span>

<a href="#"
onclick="javascript:ChangeTab(&#39;ID0EDAABA&#39;,&#39;cs&#39;,&#39;1&#39;,&#39;4&#39;);return false;">C#</a>

<a href="#"
onclick="javascript:ChangeTab(&#39;ID0EDAABA&#39;,&#39;vb&#39;,&#39;2&#39;,&#39;4&#39;);return false;">VB</a>

<a href="#"
onclick="javascript:ChangeTab(&#39;ID0EDAABA&#39;,&#39;cpp&#39;,&#39;3&#39;,&#39;4&#39;);return false;">C++</a>

<a href="#"
onclick="javascript:ChangeTab(&#39;ID0EDAABA&#39;,&#39;fs&#39;,&#39;4&#39;,&#39;4&#39;);return false;">F#</a>

<a href="#" id="ID0EDAABA_copyCode" class="copyCodeSnippet"
onclick="javascript:CopyToClipboard(&#39;ID0EDAABA&#39;);return false;"
title="Copy">Copy</a>

    // Connect to the device 1.1.1 (connection-oriented)
    await using (var deviceCO = await bus.OpenConnectionAsync("1.1.1"))
    {
        // do something with deviceCO
    }

    // The same as connection-less communication
    await using (var deviceCL = await bus.OpenConnectionlessAsync("1.1.1"))
    {
        // do something with deviceCL
    }

    ' VB currently neither supports Await Using not Await in Finally blocks, so we have to use Async.Using

    ' Connect to the device 1.1.1 (connection-oriented)
    Await Async.Using(Await bus.OpenConnectionAsync("1.1.1"),
                      Async Function(deviceCO) As Task
                          ' do something with deviceCO
                      End Function)

    ' The same as connection-less communication
    Await Async.Using(Await bus.OpenConnectionlessAsync("1.1.1"),
                      Async Function(deviceCL) As Task
                          ' do something with deviceCL
                      End Function)

No code example is currently available or this language may not be
supported.

No code example is currently available or this language may not be
supported.

<span class="collapsibleRegionTitle"
onclick="SectionExpandCollapse('ID5RB')"
onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)"
tabindex="0"><img src="../icons/SectionExpanded.png" id="ID5RBToggle"
class="collapseToggle" />See Also</span>

#### Reference

[KnxBus Class](ada1239a-6384-eadd-a0d4-263e34da83f7.htm)

[Knx.Falcon.Sdk Namespace](ddc84507-eccd-b692-8467-e3956feec382.htm)

Copyright © 2010-2024 KNX Association cvba, Brussels, Belgium
